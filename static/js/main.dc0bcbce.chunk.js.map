{"version":3,"sources":["components/Header.js","components/Footer.js","axios.js","components/AnimePoster.js","components/AnimeContainer.js","components/Loader/LoadingPoster.js","components/Loader/LoaderContainer.js","components/Controls.js","views/Home.js","views/Popular.js","views/Movies.js","views/Search.js","views/Anime.js","views/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","useLocation","pathname","split","route","className","to","IconButton","Footer","year","Date","getFullYear","onClick","window","scrollTo","top","behavior","axios","require","baseURL","search","method","loading","get","then","a","res","catch","err","AnimePoster","title","image","episode","released","replace","src","alt","AnimeContainer","data","map","anime","index","key","img","type","height","width","color","LoaderContainer","Array","loader","Controls","page","setPage","isLoading","disabled","Home","params","useParams","id","useState","Number","pageIndex","setPageIndex","recentEpisodes","setRecentEpisodes","setLoading","useEffect","getRecentEpisodes","Grow","in","Popular","popular","setPopular","getPopular","Movies","movies","setMovies","getMovies","Search","searchResults","setSearchResults","searchValue","setSearchValue","setIsLoading","onSubmit","e","preventDefault","Input","placeholder","disableUnderline","autoFocus","value","onChange","target","Anime","isOpen","setOpen","watchedEpisodes","document","querySelectorAll","setAnime","playing","setPlaying","playEpisode","modal","forEach","button","genres","element","synopsis","channel","url","servers","iframe","autoplay","onClose","episodes","NotFoundPage","App","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","Fragment","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.dc0bcbce.chunk.js","sourcesContent":["import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\nimport '../styles/header.css'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\n\nconst Header = () => {\n    let [route] = useLocation().pathname.split(\"=\")\n\n    return (\n        <header>\n            <div className=\"header__container\">\n                <div className=\"header__left\">\n                    <h1>anime<span>web</span></h1>\n                    <nav>\n                        <ul>\n                            <li>\n                                <Link to=\"/home/page=1\" className={route === '/home/page' ? 'active' : ''}>Home</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/popular/page=1\" className={route === '/popular/page' ? 'active' : ''}>Popular</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/movies/page=1\" className={route === '/movies/page' ? 'active' : ''}>Movies</Link>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n                <div className=\"header__right\">\n                    <Link to=\"/search\">\n                        <IconButton className={route === '/search' ? 'active' : ''}>\n                            <p>search...</p>\n                            <SearchOutlinedIcon />\n                        </IconButton>\n                    </Link>\n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nimport '../styles/footer.css'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpwardOutlined';\n\nconst Footer = () => {\n    const date = new Date();\n\n    const year = date.getFullYear();\n\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        })\n    }\n\n    return (\n        <footer>\n            <div className=\"footerContainer\">\n                <p><span>anime</span>web | { year }</p>\n                <IconButton onClick={() => scrollToTop()}>\n                    <ArrowUpwardIcon />\n                </IconButton>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","const axios = require('axios');\n\nconst baseURL = process.env.NODE_ENV === 'development' ? \"http://localhost:8888/.netlify/functions/server\" : \"https://weeblix.netlify.app/.netlify/functions/server\"\n\nconst getRecentEpisodes = (id, method, loading) => {\n    axios\n        .get(`${baseURL}/RecentReleaseEpisodes/${id}`)\n        .then(async res => {\n            await method(res);\n            loading(false)\n        })\n        .catch(async err => {\n            method(err)\n        })\n}\n\n\nconst getPopular = (id, method, loading) => {\n    axios\n        .get(`${baseURL}/Popular/${id}`)\n        .then(async res => {\n            await method(res);\n            loading(false);\n        })\n        .catch(async err => {\n            await method(err)\n            loading(false);\n        })  \n}\n\nconst getMovies = (id, method, loading) => {\n    axios\n        .get(`${baseURL}/Movies/${id}`)\n        .then(async res => {\n            await method(res);\n            loading(false)\n        })\n        .catch(async err => {\n            await method(err)\n            loading(false);\n        })\n}\n\nconst search = (search, method, loading) => {\n    axios\n        .get(`${baseURL}/Search/${search}`)\n        .then(async res => {\n            await method(res);\n            loading(false);\n        })\n        .catch(async err => {\n            await method(err)\n            loading(false);\n        })\n}\n\nconst animeEpisodeHandler = (episode, method, modal) => {\n    axios\n        .get(`${baseURL}/AnimeEpisodeHandler/${episode}`)\n        .then(async res => {\n            await method(res)\n            modal(true)\n        })\n        .catch(async err => {\n            await method(err)\n            modal(true)\n        })\n}\n\nexport { \n    getRecentEpisodes,\n    getPopular,\n    getMovies,\n    search,\n    animeEpisodeHandler\n}","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport '../styles/animePoster.css'\n\nconst AnimePoster = ({ title, image, episode, released}) => {\n    return (\n        <Link to={`/anime/${title.replace(/\\//g, '%2F')}`}>\n            <div className=\"animePoster\" title={title}>\n                <img src={ image } alt=\"\"/>\n                <div className=\"animePoster__title\">\n                    <h3 className=\"animePoster__animeTitle\">{ title }</h3>\n                    {\n                        episode ? (\n                            <p className=\"animePoster__animeEpisode\">Episode { episode }</p>\n                        ) : (\n                            <p className=\"animePoster__animeReleased\">Released: { released }</p>\n                        )\n                    }\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default AnimePoster\n","import React from 'react'\n\nimport AnimePoster from './AnimePoster'\n\nimport '../styles/animeContainer.css'\n\nconst AnimeContainer = ({ data }) => {\n    return (\n        <div className=\"animeContainer\">\n            {\n                data ? (\n                    data.map((anime, index) => (\n                        <AnimePoster \n                            key = {index}\n                            title = {anime.title}\n                            image = {anime.img}\n                            episode = {anime.episode}\n                            released = {anime.released}\n                        />\n                    ))\n                ) : (\n                    false\n                )\n            }\n        </div>\n    )\n}\n\nexport default AnimeContainer\n","import React from 'react'\n\nimport ReactLoading from 'react-loading';\n\nimport '../../styles/animePoster.css'\n\nconst AnimePoster = () => {\n    return (\n        <div className=\"animePoster\">\n            <ReactLoading type=\"cylon\" className=\"loader\" height=\"100%\" width=\"100%\" color=\"#A21E2D\"/>\n            <div className=\"animePoster__title\">\n                <p className=\"animePoster__animeEpisode\">loading...</p>\n            </div>\n        </div>\n    )\n}\n\nexport default AnimePoster\n","import React from 'react'\n\nimport AnimePoster from './LoadingPoster'\n\nimport '../../styles/animeContainer.css'\n\nconst LoaderContainer = () => {\n    const loaders = 20;\n\n    return (\n        <div className=\"animeContainer\">\n            {\n                [...Array(loaders)].map((loader, index) => (\n                    <AnimePoster key={ index }/>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default LoaderContainer","import React from 'react'\n\nimport { Link, useLocation } from 'react-router-dom'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport '../styles/controls.css'\n\nconst Controls = ({ page, setPage, isLoading }) => {\n    let [route] = useLocation().pathname.split(\"=\")\n\n    const prev = () => {\n        if(!(page === 1 || isLoading)) {\n            setPage(page - 1)\n        }\n    }\n\n    const next = () => {\n        if(!isLoading) {\n            setPage(page + 1)\n        }\n    }\n\n    return (\n        <div className=\"controls\">\n            <IconButton\n                disabled = {page === 1 || isLoading ? true : false}\n                onClick={() => prev()}\n            >\n                <Link to={`${route}=${page - 1}`} className={page === 1 || isLoading ? 'inactive' : ''}>\n                    <ArrowBackIosIcon/>\n                </Link>\n            </IconButton>\n            <p>{ page }</p>\n            <IconButton\n                disabled = {isLoading ? true : false}\n                onClick={() => next()}\n            >\n                <Link to={`${route}=${page + 1}`} className={isLoading ? 'inactive' : ''}>\n                    <ArrowForwardIosIcon/>\n                </Link>\n            </IconButton>\n        </div>\n    )\n}\n\nexport default Controls\n","import React, { useState, useEffect } from 'react'\n\nimport { getRecentEpisodes } from '../axios'\n\nimport { useParams } from 'react-router-dom'\n\nimport Grow from '@material-ui/core/Grow'\n\nimport AnimeContainer from '../components/AnimeContainer'\nimport LoaderContainer from '../components/Loader/LoaderContainer'\nimport Controls from '../components/Controls'\n\nimport '../styles/home.css'\n\nconst Home = () => {\n    let params = useParams().id\n    const [pageIndex, setPageIndex] = useState(Number(params))\n\n\n    const [recentEpisodes, setRecentEpisodes] = useState('')\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        setPageIndex(Number(params))\n        setLoading(true)\n        getRecentEpisodes(Number(params), setRecentEpisodes, setLoading)\n    }, [params])\n\n    return (\n        <Grow in={true}>\n        <div className=\"container\">\n            <div className=\"animeContainer__wrapper\">\n                <h3 className=\"animeContainer__title\">Recent episodes</h3>\n                <Controls \n                    page = {pageIndex} \n                    setPage = {setPageIndex} \n                    isLoading = {loading}\n                />\n                {\n                    loading ? (\n                        <LoaderContainer />\n                    ) : (\n                        <AnimeContainer \n                            data = {recentEpisodes.data}\n                        />\n                    )\n                }\n            </div>\n        </div>\n        </Grow>\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\n\nimport { getPopular } from '../axios'\n\nimport { useParams } from 'react-router-dom'\n\nimport Grow from '@material-ui/core/Grow'\n\nimport AnimeContainer from '../components/AnimeContainer'\nimport LoaderContainer from '../components/Loader/LoaderContainer'\nimport Controls from '../components/Controls'\n\nimport '../styles/home.css'\n\nconst Popular = () => {\n    let params = useParams().id\n    const [pageIndex, setPageIndex] = useState(Number(params))\n\n    const [popular, setPopular] = useState('')\n\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        setPageIndex(Number(params))\n        setLoading(true)\n        getPopular(Number(params), setPopular, setLoading)\n    }, [params])\n\n    return (\n        <Grow in={true}>\n            <div className=\"container\">\n                <div className=\"animeContainer__wrapper\">\n                    <h3 className=\"animeContainer__title\">Popular series</h3>\n                    <Controls \n                        page = {pageIndex} \n                        setPage = {setPageIndex} \n                        isLoading = {loading}\n                    />\n                    {\n                        loading ? (\n                            <LoaderContainer />\n                        ) : (\n                            <AnimeContainer data = {popular.data}/>\n                        )\n                    }\n                </div>\n            </div>\n        </Grow>\n    )\n}\n\nexport default Popular\n","import React, { useState, useEffect } from 'react'\n\nimport { getMovies } from '../axios'\n\nimport Grow from '@material-ui/core/Grow'\n\nimport { useParams } from 'react-router-dom'\n\nimport AnimeContainer from '../components/AnimeContainer'\nimport LoaderContainer from '../components/Loader/LoaderContainer'\nimport Controls from '../components/Controls'\n\nimport '../styles/home.css'\n\nconst Movies = () => {\n    let params = useParams().id\n    const [pageIndex, setPageIndex] = useState(Number(params))\n\n    const [movies, setMovies] = useState('')\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        setPageIndex(Number(params))\n        setLoading(true)\n        getMovies(Number(params), setMovies, setLoading)\n    }, [params])\n\n    return (\n        <Grow in={true}>\n        <div className=\"container\">\n            <div className=\"animeContainer__wrapper\">\n                <h3 className=\"animeContainer__title\">Movies</h3>\n                <Controls \n                    page = {pageIndex} \n                    setPage = {setPageIndex} \n                    isLoading = {loading}\n                />\n                {\n                    loading ? (\n                        <LoaderContainer />\n                    ) : (\n                        <AnimeContainer data = {movies.data}/>\n                    )\n                }\n            </div>\n        </div>\n        </Grow>\n    )\n}\n\nexport default Movies\n","import React, { useState } from 'react'\n\nimport { search } from '../axios'\nimport AnimeContainer from '../components/AnimeContainer'\nimport LoadingContainer from '../components/Loader/LoaderContainer'\n\nimport Grow from '@material-ui/core/Grow'\n\nimport '../styles/search.css'\n\nimport { Input } from '@material-ui/core';\n\nconst Search = () => {\n    const [searchResults, setSearchResults] = useState('')\n    const [searchValue, setSearchValue] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n\n    const updateSearchValue = (e) => {\n        setSearchValue(e.target.value)\n    }\n\n    const searchAnime = (e) => {\n        e.preventDefault()\n        if(searchValue) {\n            setIsLoading(true)\n            search(searchValue, setSearchResults, setIsLoading)\n        }\n    }\n\n    return (\n        <Grow in={true}>\n            <div className=\"searchContainer\">\n                <form onSubmit={searchAnime}>\n                    <Input \n                        id=\"search\" \n                        placeholder=\"search...\"\n                        disableUnderline\n                        autoFocus\n                        value={ searchValue }\n                        onChange={ updateSearchValue }\n                    />\n                </form>\n                <h2>Results:</h2>\n                {\n                    isLoading ? (\n                        <LoadingContainer />\n                    ) : (\n                        <AnimeContainer \n                            data = {searchResults.data}\n                        />\n                    )\n                }\n            </div>\n        </Grow>\n    )\n}\n\nexport default Search\n","import React, { useState, useEffect } from 'react'\n\nimport { useParams } from 'react-router-dom'\n\nimport 'react-modal-video/scss/modal-video.scss';\n\nimport ModalVideo from 'react-modal-video'\n\nimport ReactLoading from 'react-loading';\n\nimport { search, animeEpisodeHandler } from '../axios'\n\nimport '../styles/anime.css'\n\nconst Anime = () => {\n    const [isOpen, setOpen] = useState(false)\n    let watchedEpisodes = document.querySelectorAll('.currentEpisode') || []\n\n    let params = useParams().title\n    \n    const [anime, setAnime] = useState()\n    const [playing, setPlaying] = useState()\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        search(params, setAnime, setIsLoading)\n    }, [params])\n\n    const playEpisode = (e, id) => {\n        if(watchedEpisodes) {\n            watchedEpisodes.forEach(button => {\n                button.className = \"watchedEpisode\"\n            })\n        }\n        e.target.className = \"currentEpisode\"\n        animeEpisodeHandler(id, setPlaying, setOpen)\n    }\n\n    return (\n        <div className=\"container\">\n            {\n                !isLoading ? (\n                    <>\n                    <div className=\"anime__info__wrapper\">\n                        <img src={anime.data[0].img} alt=\"\"/>\n                        <div className=\"anime__info\">\n                            <div className=\"anime__info__top\">\n                                <h2 className=\"anime__info__title\">{ anime.data[0].title }</h2>\n                                <p>Released: { anime.data[0].released }</p>\n                                <div className=\"anime__info__genres\">\n                                    {\n                                        anime.data[0].genres.map((element, index) => (\n                                            <p key={index}>{element}</p>\n                                        ))\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"anime__info__description\">\n                                <p>{ anime.data[0].synopsis }</p>\n                            </div>\n                        </div>\n                    </div>\n                    <ModalVideo channel='custom' url={playing ? `https://${playing.data[0].servers[0].iframe}` : ''} autoplay isOpen={isOpen} onClose={() => setOpen(false)} />\n                    <div className=\"anime__episodes\">\n                        <h2>Episodes:</h2>\n                        <div className=\"anime__episodes__container\">\n                            {\n                                anime.data[0].episodes.map((element, index) => (\n                                    <div key={index}>\n                                        <button onClick={(e)=> playEpisode(e, element.id)}>{ index + 1 }</button>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                    </>\n                ) : (\n                    <div className=\"loadingContainer\">\n                        <ReactLoading type=\"spin\" className=\"loader\" height=\"100px\" width=\"100px\" color=\"#A21E2D\"/>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default Anime\n","import React from 'react'\n\nconst NotFoundPage = () => {\n    return (\n        <div>\n            <h1>Not found</h1>\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Home from './views/Home'\nimport Popular from './views/Popular'\nimport Movies from './views/Movies'\nimport Search from './views/Search'\nimport Anime from './views/Anime'\nimport NotFoundPage from './views/NotFoundPage'\n\nimport './styles/app.css'       \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <main>\n          <Switch>\n            <Route path=\"/anime/:title\" component={Anime}></Route>\n            <Route path=\"/search\" exact component={Search}></Route>\n            <Route path=\"/movies/page=:id\" component={Movies}></Route>\n            <Route path=\"/popular/page=:id\" component={Popular}></Route>\n            <Route path=\"/home/page=:id\" component={Home} exact></Route>\n            <Route path=\"/\"> \n              <Redirect to=\"/home/page=1\" />\n            </Route>\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n        </main>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}